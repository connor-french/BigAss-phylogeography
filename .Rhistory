coord_flip() +
theme_minimal()
m_df <- tibble(reproductive_mode = c("Sexual", "Asexual"),
marg = c(ahor_sexual_enfa$enfa_obj$m, ahor_asexual_enfa$enfa_obj$m),
species_name = "Argosarchus horridus")
ggplot(m_df, aes(x = reproductive_mode, y = marg)) +
geom_segment(aes(x = reproductive_mode, xend = reproductive_mode, y = 0, yend = marg)) +
geom_point(col = "orange", size = 4) +
labs(x = "Reproductive mode", y = "Marginality", title = m_df$species_name) +
coord_flip() +
theme_minimal()
marg_barplot
marginality_barplot <- function(sex_marg, asex_marg, full_species_name) {
marg_df <- tibble(reproductive_mode = c("Sexual", "Asexual"),
marg = c({{sex_marg}}, {{asex_marg}}),
species_name = {{full_species_name}}) %>%
mutate(marg = fct_reorder(marg))
marg_barplot <- ggplot(data = marg_df, aes(x = reproductive_mode, y = marg)) +
geom_segment(aes(x = reproductive_mode, xend = reproductive_mode, y = 0, yend = marg)) +
geom_point(col = "orange", size = 4) +
labs(x = "Reproductive mode", y = "Marginality", title = marg_df$species_name) +
coord_flip() +
theme_minimal()
marg_barplot
}
marginality_barplot(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
species_name = "Argosarchus horridus")
marginality_barplot(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
full_species_name = "Argosarchus horridus")
marginality_barplot <- function(sex_marg, asex_marg, full_species_name) {
marg_df <- tibble(reproductive_mode = c("Sexual", "Asexual"),
marg = c(sex_marg, asex_marg),
species_name = {{full_species_name}}) %>%
mutate(marg = fct_reorder(marg))
marg_barplot <- ggplot(data = marg_df, aes(x = reproductive_mode, y = marg)) +
geom_segment(aes(x = reproductive_mode, xend = reproductive_mode, y = 0, yend = marg)) +
geom_point(col = "orange", size = 4) +
labs(x = "Reproductive mode", y = "Marginality", title = marg_df$species_name) +
coord_flip() +
theme_minimal()
marg_barplot
}
marginality_barplot(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
full_species_name = "Argosarchus horridus")
marginality_barplot <- function(sex_marg, asex_marg, full_species_name) {
marg_df <- tibble(reproductive_mode = as.factor(c("Sexual", "Asexual")),
marg = c(sex_marg, asex_marg),
species_name = {{full_species_name}}) %>%
mutate(marg = fct_reorder(marg))
marg_barplot <- ggplot(data = marg_df, aes(x = reproductive_mode, y = marg)) +
geom_segment(aes(x = reproductive_mode, xend = reproductive_mode, y = 0, yend = marg)) +
geom_point(col = "orange", size = 4) +
labs(x = "Reproductive mode", y = "Marginality", title = marg_df$species_name) +
coord_flip() +
theme_minimal()
marg_barplot
}
marginality_barplot(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
full_species_name = "Argosarchus horridus")
#marg_barplot
marg_df
marginality_barplot <- function(sex_marg, asex_marg, full_species_name) {
marg_df <- tibble(reproductive_mode = c("Sexual", "Asexual"),
marg = c(sex_marg, asex_marg),
species_name = {{full_species_name}}) %>%
mutate(marg = fct_reorder(marg))
#marg_barplot <- ggplot(data = marg_df, aes(x = reproductive_mode, y = marg)) +
geom_segment(aes(x = reproductive_mode, xend = reproductive_mode, y = 0, yend = marg)) +
geom_point(col = "orange", size = 4) +
labs(x = "Reproductive mode", y = "Marginality", title = marg_df$species_name) +
coord_flip() +
theme_minimal()
#marg_barplot
marg_df
}
marginality_barplot(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
full_species_name = "Argosarchus horridus")
?fct_reorder
marginality_barplot <- function(sex_marg, asex_marg, full_species_name) {
marg_df <- tibble(reproductive_mode = c("Sexual", "Asexual"),
marg = c(sex_marg, asex_marg),
species_name = {{full_species_name}}) %>%
mutate(reproductive_mode = fct_reorder(reproductive_mode, marg))
#marg_barplot <- ggplot(data = marg_df, aes(x = reproductive_mode, y = marg)) +
geom_segment(aes(x = reproductive_mode, xend = reproductive_mode, y = 0, yend = marg)) +
geom_point(col = "orange", size = 4) +
labs(x = "Reproductive mode", y = "Marginality", title = marg_df$species_name) +
coord_flip() +
theme_minimal()
#marg_barplot
marg_df
}
marginality_barplot(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
full_species_name = "Argosarchus horridus")
marginality_barplot <- function(sex_marg, asex_marg, full_species_name) {
marg_df <- tibble(reproductive_mode = c("Sexual", "Asexual"),
marg = c(sex_marg, asex_marg),
species_name = {{full_species_name}}) %>%
mutate(reproductive_mode = fct_reorder(reproductive_mode, marg))
marg_barplot <- ggplot(data = marg_df, aes(x = reproductive_mode, y = marg)) +
geom_segment(aes(x = reproductive_mode, xend = reproductive_mode, y = 0, yend = marg)) +
geom_point(col = "orange", size = 4) +
labs(x = "Reproductive mode", y = "Marginality", title = marg_df$species_name) +
coord_flip() +
theme_minimal()
marg_barplot
}
marginality_barplot(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
full_species_name = "Argosarchus horridus")
marginality_lollipop <- function(sex_marg, asex_marg, full_species_name) {
marg_df <- tibble(reproductive_mode = c("Sexual", "Asexual"),
marg = c(sex_marg, asex_marg),
species_name = {{full_species_name}}) %>%
mutate(reproductive_mode = fct_reorder(reproductive_mode, marg))
marg_lollipop <- ggplot(data = marg_df, aes(x = reproductive_mode, y = marg)) +
geom_segment(aes(x = reproductive_mode, xend = reproductive_mode, y = 0, yend = marg)) +
geom_point(col = "orange", size = 4) +
labs(x = "Reproductive mode", y = "Marginality", title = marg_df$species_name) +
coord_flip() +
theme_minimal()
marg_lollipop
}
source("R/marginality_lollipop_plot.R")
marginality_lollipop(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
full_species_name = "Argosarchus horridus")
#get background env't for the species
ahor_bg_env <- bg_env_crop(argo_loc,
species = "horridus",
environment = w,
buffer = 0.5)
#enfa for the sexual species
ahor_sexual_enfa <- enfa_calc_fun(locs = argo_loc,
species = "horridus",
reproductive_mode = "sexual",
mask_raster = ahor_bg_env)
#enfa for the asexual species
ahor_asexual_enfa <- enfa_calc_fun(locs = argo_loc,
species = "horridus",
reproductive_mode = "asexual",
mask_raster = ahor_bg_env)
#plot the marginality scores
marginality_lollipop(sex_marg = ahor_sexual_enfa$enfa_obj$m,
asex_marg = ahor_asexual_enfa$enfa_obj$m,
full_species_name = "Argosarchus horridus")
#plot the marginality scores
marginality_lollipop(sex_marg = ahor_sexual_enfa$m,
asex_marg = ahor_asexual_enfa$m,
full_species_name = "Argosarchus horridus")
#pca
summary.list.aste <- species_pca_fun(loc.clim, "asteliaphasma")
#plot
aste_plot <- plot_clim_pca(summary.list.aste$loc.clim, summary.list.aste$summary.pca, factor = "reproductive_mode")
aste_plot
#if selfcontained = TRUE, you can remove the folder that gets added alongside the plot. It's an annoying bug that hasn't been fixed yet.
#htmlwidgets::saveWidget(aste_plot, paste0(getwd(), "/plots/repro_mode_plots/asteliaphasma_pca.html"), selfcontained = TRUE)
#filter localities for the focal genus
aste_loc <- loc %>%
filter(genus == "asteliaphasma")
#use sourced plot_locs_leaflet script to plot localities
aste_map <- plot_locs_leaflet(aste_loc, "reproductive_mode")
aste_map
#in case I want to save the map somewhere
#mapview::mapshot(aste_map, url = paste0(getwd(), "/plots/repro_mode_plots/aste_map.html"), file = paste0(getwd(), "/plots/repro_mode_plots/aste_map.pdf"))
summary.list.aste$summary.pca
loadings.aste <- summary.list.aste$summary.pca$rotation
knitr::kable(round(loadings.aste[,1:3],3)) #Table of loading scores for the first 3 PCs.
}
aste_loc
aste_loc$species
#get background env't for the species
ajuc_bg_env <- bg_env_crop(aste_loc,
species = "jucundum",
environment = w,
buffer = 0.5)
#enfa for the sexual species
ajuc_sexual_enfa <- enfa_calc_fun(locs = aste_loc,
species = "jucundum",
reproductive_mode = "sexual",
mask_raster = ajuc_bg_env)
#enfa for the asexual species
ajuc_asexual_enfa <- enfa_calc_fun(locs = aste_loc,
species = "jucundum",
reproductive_mode = "asexual",
mask_raster = ajuc_bg_env)
#plot the marginality scores
marginality_lollipop(sex_marg = ahor_sexual_enfa$m,
asex_marg = ahor_asexual_enfa$m,
full_species_name = "Asteliaphasma jucundum")
ajuc_asexual_enfa$m
ajuc_sexual_enfa$m
#plot the marginality scores
marginality_lollipop(sex_marg = ajuc_sexual_enfa$m,
asex_marg = ajuc_asexual_enfa$m,
full_species_name = "Asteliaphasma jucundum")
summary.list.clita <- species_pca_fun(loc.clim, "clitarchus")
clita_plot <- plot_clim_pca(summary.list.clita$loc.clim, summary.list.clita$summary.pca, factor = "reproductive_mode")
clita_plot
#if selfcontained = TRUE, you can remove the folder that gets added alongside the plot. It's an annoying bug that hasn't been fixed yet.
#htmlwidgets::saveWidget(clita_plot, paste0(getwd(), "/plots/repro_mode_plots/clitarchus_pca.html"), selfcontained = TRUE)
#filter localities for the focal genus
clita_loc <- loc %>%
filter(genus == "clitarchus")
#use sourced plot_locs_leaflet script to plot localities
clita_map <- plot_locs_leaflet(clita_loc, "reproductive_mode")
clita_map
#in case I want to save the map somewhere
#mapview::mapshot(clita_map, url = paste0(getwd(), "/plots/repro_mode_plots/clita_map.html"), file = paste0(getwd(), "/plots/repro_mode_plots/clita_map.pdf"))
clita_loc
unique(clita_loc$species)
clita_loc %>% select(species == "tepaki") %>% count(reproductive_mode)
clita_loc %>% dplyr::select(species == "tepaki") %>% count(reproductive_mode)
clita_loc
clita_loc$species
clita_loc %>% dplyr::filter(species == "tepaki") %>% count(reproductive_mode)
clita_loc %>% dplyr::filter(species == "hookeri") %>% count(reproductive_mode)
#get background env't for the species
choo_bg_env <- bg_env_crop(clita_loc,
species = "hookeri",
environment = w,
buffer = 0.5)
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_rclitar = choo_bg_env)
#get background env't for the species
choo_bg_env <- bg_env_crop(clita_loc,
species = "hookeri",
environment = w,
buffer = 0.5)
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
clita_loc
choo_bg_env
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
plot(choo_bg_env)
plot(choo_bg_env[[1]])
source("R/enfa_calc_function.R")
source("R/marginality_lollipop_plot.R")
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
choo_sexual_enfa
source("R/enfa_calc_function.R")
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
choo_sexual_enfa
length(choo_sexual_enfa$locs_pr)
source("R/enfa_calc_function.R")
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
choo_sexual_enfa$locs_filtered
source("R/enfa_calc_function.R")
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
locs_pr <- na.omit(values(presence_absence)) %>% as.vector()
locs_pr <- na.omit(values(choo_sexual_enfa$pr_raster)) %>% as.vector()
length(locs_pr)
choo_sexual_enfa$env_pca
length(locs_pr[locs_pr > 1])
length(locs_pr[locs_pr > 0])
choo_sexual_enfa$locs_filtered
source("R/enfa_calc_function.R")
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
choo_sexual_enfa$env_df %>% as_tibble()
?if
()
?ifthen
locs_pr[locs_pr == 0]
locs_pr[locs_pr == 0 - 1]
locs_pr[locs_pr == 0] - 1
locs_pr[locs_pr == 0]
locs_pr[length(locs_pr)]
locs_pr[length(locs_pr)-4:length(locs_pr)]
locs_pr[(length(locs_pr)-4):length(locs_pr)]
l_dif <- locs_pr[(length(locs_pr)-4):length(locs_pr)]
l_dif > 1
locs_pr1 <- locs_pr[1:length(locs_pr) - l_dif]
locs_pr1 <- locs_pr[1:(length(locs_pr) - l_dif)]
length(locs_pr1)
l_dif
locs_pr1 <- locs_pr[1:(length(locs_pr) - length(l_dif))]
length(locs_pr1)
l_vec
l_dif <- length(locs_pr) - length(env_df[,1])
l_dif
l_dif <- 4
l_vec <- locs_pr[(length(locs_pr)-l_dif):length(locs_pr)]
l_vec
source("R/enfa_calc_function.R")
source("R/enfa_calc_function.R")
source("R/enfa_calc_function.R")
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
length(choo_sexual_enfa$locs_pr)
length(choo_sexual_enfa$env_df$chelsa_bioclims_NZ.1)
source("R/enfa_calc_function.R")
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
choo_sexual_enfa
#get background env't for the species
choo_bg_env <- bg_env_crop(clita_loc,
species = "hookeri",
environment = w,
buffer = 0.5)
#enfa for the sexual species
choo_sexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "sexual",
mask_raster = choo_bg_env)
#enfa for the asexual species
choo_asexual_enfa <- enfa_calc_fun(locs = clita_loc,
species = "hookeri",
reproductive_mode = "asexual",
mask_raster = choo_bg_env)
#plot the marginality scores
marginality_lollipop(sex_marg = choo_sexual_enfa$m,
asex_marg = choo_asexual_enfa$m,
full_species_name = "Clitarchus hookeri")
summary.list.micra <- species_pca_fun(loc.clim, "micrarchus")
micra_plot <- plot_clim_pca(summary.list.micra$loc.clim, summary.list.micra$summary.pca, factor = "reproductive_mode")
micra_plot
#if selfcontained = TRUE, you can remove the folder that gets added alongside the plot. It's an annoying bug that hasn't been fixed yet.
#htmlwidgets::saveWidget(micra_plot, paste0(getwd(), "/plots/repro_mode_plots/micrarchus_pca.html"), selfcontained = TRUE)
#filter localities for the focal genus
micra_loc <- loc %>%
filter(genus == "micrarchus")
#use sourced plot_locs_leaflet script to plot localities
micra_map <- plot_locs_leaflet(micra_loc, "reproductive_mode")
micra_map
#in case I want to save the map somewhere
mapview::mapshot(micra_map, url = paste0(getwd(), "/plots/repro_mode_plots/micra_map.html"), file = paste0(getwd(), "/plots/repro_mode_plots/micra_map.pdf"))
summary.list.micra$summary.pca
loadings.micra <- summary.list.micra$summary.pca$rotation
knitr::kable(round(loadings.micra[,1:3],3)) #Table of loading scores for the first 3 PCs.
summary.list.nive <- species_pca_fun(loc.clim, "niveaphasma")
nive_plot <- plot_clim_pca(summary.list.nive$loc.clim, summary.list.nive$summary.pca, factor = "reproductive_mode")
nive_plot
#if selfcontained = TRUE, you can remove the folder that gets added alongside the plot. It's an annoying bug that hasn't been fixed yet.
#htmlwidgets::saveWidget(nive_plot, paste0(getwd(), "/plots/repro_mode_plots/niveaphasma_pca.html"), selfcontained = TRUE)
#filter localities for the focal genus
nive_loc <- loc %>%
filter(genus == "niveaphasma")
#use sourced plot_locs_leaflet script to plot localities
nive_map <- plot_locs_leaflet(nive_loc, "reproductive_mode")
nive_map
#in case I want to save the map somewhere
#mapview::mapshot(nive_map, url = paste0(getwd(), "/plots/repro_mode_plots/nive_map.html"), file = paste0(getwd(), "/plots/repro_mode_plots/nive_map.pdf"))
summary.list.nive$summary.pca
loadings.nive <- summary.list.nive$summary.pca$rotation
knitr::kable(round(loadings.nive[,1:3],3)) #Table of loading scores for the first 3 PCs.
nive_loc
unique(nive_loc$species)
#get background env't for the species
nive_bg_env <- bg_env_crop(nive_loc,
species = "annulata",
environment = w,
buffer = 0.5)
#enfa for the sexual species
nive_sexual_enfa <- enfa_calc_fun(locs = nive_loc,
species = "annulata",
reproductive_mode = "sexual",
mask_raster = nive_bg_env)
#enfa for the asexual species
nive_asexual_enfa <- enfa_calc_fun(locs = nive_loc,
species = "annulata",
reproductive_mode = "asexual",
mask_raster = nive_bg_env)
#plot the marginality scores
marginality_lollipop(sex_marg = nive_sexual_enfa$m,
asex_marg = nive_asexual_enfa$m,
full_species_name = "Niveaphasma annulata")
summary.list.spin <- species_pca_fun(loc.clim, "spinotectarchus")
spin_plot <- plot_clim_pca(summary.list.spin$loc.clim, summary.list.spin$summary.pca, factor = "reproductive_mode")
spin_plot
#if selfcontained = TRUE, you can remove the folder that gets added alongside the plot. It's an annoying bug that hasn't been fixed yet.
#htmlwidgets::saveWidget(spin_plot, paste0(getwd(), "/plots/repro_mode_plots/spinotectarchus_pca.html"), selfcontained = TRUE)
#filter localities for the focal genus
spin_loc <- loc %>%
filter(genus == "spinotectarchus")
#use sourced plot_locs_leaflet script to plot localities
spin_map <- plot_locs_leaflet(spin_loc, "reproductive_mode")
spin_map
#in case I want to save the map somewhere
#mapview::mapshot(spin_map, url = paste0(getwd(), "/plots/repro_mode_plots/spin_map.html"), file = paste0(getwd(), "/plots/repro_mode_plots/spin_map.pdf"))
summary.list.spin$summary.pca
loadings.spin <- summary.list.spin$summary.pca$rotation
knitr::kable(round(loadings.spin[,1:3],3)) #Table of loading scores for the first 3 PCs.
summary.list.tect <- species_pca_fun(loc.clim, "tectarchus")
tect_plot <- plot_clim_pca(summary.list.tect$loc.clim, summary.list.tect$summary.pca, factor = "reproductive_mode")
tect_plot
#if selfcontained = TRUE, you can remove the folder that gets added alongside the plot. It's an annoying bug that hasn't been fixed yet.
#htmlwidgets::saveWidget(tect_plot, paste0(getwd(), "/plots/repro_mode_plots/tectarchus_pca.html"), selfcontained = TRUE)
#filter localities for the focal genus
tect_loc <- loc %>%
filter(genus == "tectarchus")
#use sourced plot_locs_leaflet script to plot localities
tect_map <- plot_locs_leaflet(tect_loc, "reproductive_mode")
tect_map
#in case I want to save the map somewhere
#mapview::mapshot(tect_map, url = paste0(getwd(), "/plots/repro_mode_plots/tect_map.html"), file = paste0(getwd(), "/plots/repro_mode_plots/tect_map.pdf"))
summary.list.tect$summary.pca
loadings.tect <- summary.list.tect$summary.pca$rotation
knitr::kable(round(loadings.tect[,1:3],3)) #Table of loading scores for the first 3 PCs.
tect_loc
unique(tect_loc$species)
tect_loc %>% filter(species == "salebrosus") %>% count(reproductive_mode)
tect_loc %>% filter(species == "ovobessus") %>% count(reproductive_mode)
tect_loc %>% filter(species == "huttoni") %>% count(reproductive_mode)
#get background env't for the species
tect_bg_env <- bg_env_crop(tect_loc,
species = "ovobessus",
environment = w,
buffer = 0.5)
#enfa for the sexual species
tect_sexual_enfa <- enfa_calc_fun(locs = tect_loc,
species = "ovobessus",
reproductive_mode = "sexual",
mask_raster = tect_bg_env)
#enfa for the asexual species
tect_asexual_enfa <- enfa_calc_fun(locs = tect_loc,
species = "ovobessus",
reproductive_mode = "asexual",
mask_raster = tect_bg_env)
#plot the marginality scores
marginality_lollipop(sex_marg = tect_sexual_enfa$m,
asex_marg = tect_asexual_enfa$m,
full_species_name = "Tectarchus ovobessus")
#get background env't for the species
tect_bg_env <- bg_env_crop(tect_loc,
species = "huttoni",
environment = w,
buffer = 0.5)
#enfa for the sexual species
tect_sexual_enfa <- enfa_calc_fun(locs = tect_loc,
species = "huttoni",
reproductive_mode = "sexual",
mask_raster = tect_bg_env)
#enfa for the asexual species
tect_asexual_enfa <- enfa_calc_fun(locs = tect_loc,
species = "huttoni",
reproductive_mode = "asexual",
mask_raster = tect_bg_env)
#plot the marginality scores
marginality_lollipop(sex_marg = tect_sexual_enfa$m,
asex_marg = tect_asexual_enfa$m,
full_species_name = "Tectarchus huttoni")
#get background env't for the species
tect_bg_env <- bg_env_crop(tect_loc,
species = "ovobessus",
environment = w,
buffer = 0.5)
#get background env't for the species
tect_bg_env <- bg_env_crop(tect_loc,
species = "ovobessus",
environment = w,
buffer = 0.5)
#enfa for the sexual species
tect_ovo_sexual_enfa <- enfa_calc_fun(locs = tect_loc,
species = "ovobessus",
reproductive_mode = "sexual",
mask_raster = tect_bg_env)
#enfa for the asexual species
tect_ovo_asexual_enfa <- enfa_calc_fun(locs = tect_loc,
species = "ovobessus",
reproductive_mode = "asexual",
mask_raster = tect_bg_env)
#plot the marginality scores
marginality_lollipop(sex_marg = tect_ovo_sexual_enfa$m,
asex_marg = tect_ovo_asexual_enfa$m,
full_species_name = "Tectarchus ovobessus")
install.packages("dtplyr")
devtools::install_github("tidyverse/dtplyr")
library(data.table)
library(dtplyr)
library(dplyr, warn.conflicts = FALSE)
