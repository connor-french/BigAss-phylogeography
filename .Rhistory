labs(x = "Environmental variable", y = "Number of Subsets", title = "Variable importance for global dataset") +
geom_col(fill = "#440154FF") +
geo_col(aes(x = dataset, y = grsq), fill = "#5DC863FF")
model_fit_plot <- model_fit_df %>%
mutate(dataset = fct_reorder(dataset, rsq)) %>%
ggplot(aes(x = dataset, y = rsq)) +
labs(x = "Environmental variable", y = "Number of Subsets", title = "Variable importance for global dataset") +
geom_col(fill = "#440154FF") +
geom_col(aes(x = dataset, y = grsq), fill = "#5DC863FF") +
coord_flip() +
theme(text = element_text(size=35, color = "#333333"),
panel.background = element_rect(fill = "transparent", color = "#333333"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
legend.text=element_text(color = "#333333"),
legend.title = element_text(color = "#333333"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg)
axis.text.x = element_text(color = "#333333"),
axis.text.y = element_text(color = "#333333")
)
model_fit_plot
model_fit_plot <- model_fit_df %>%
mutate(dataset = fct_reorder(dataset, rsq)) %>%
ggplot(aes(x = dataset, y = rsq)) +
labs(x = "Environmental variable", y = "Number of Subsets", title = "Variable importance for global dataset") +
geom_col(fill = "#440154FF") +
geom_col(aes(x = dataset, y = grsq), fill = "#20A486FF") +
coord_flip() +
theme(text = element_text(size=35, color = "#333333"),
panel.background = element_rect(fill = "transparent", color = "#333333"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
legend.text=element_text(color = "#333333"),
legend.title = element_text(color = "#333333"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg)
axis.text.x = element_text(color = "#333333"),
axis.text.y = element_text(color = "#333333")
)
model_fit_plot
?geom_col
model_fit_plot <- model_fit_df %>%
mutate(dataset = fct_reorder(dataset, rsq)) %>%
ggplot(aes(x = dataset, y = rsq)) +
labs(x = "Environmental variable", y = "Number of Subsets", title = "Variable importance for global dataset") +
geom_col(fill = "#440154FF") +
geom_col(aes(x = dataset, y = grsq), fill = "#20A486FF", position = position_dodge()) +
coord_flip() +
theme(text = element_text(size=35, color = "#333333"),
panel.background = element_rect(fill = "transparent", color = "#333333"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
legend.text=element_text(color = "#333333"),
legend.title = element_text(color = "#333333"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg)
axis.text.x = element_text(color = "#333333"),
axis.text.y = element_text(color = "#333333")
)
model_fit_plot
model_fit_plot <- model_fit_df %>%
mutate(dataset = fct_reorder(dataset, rsq)) %>%
ggplot(aes(x = dataset, y = rsq)) +
labs(x = "Environmental variable", y = "Number of Subsets", title = "Variable importance for global dataset") +
geom_col(fill = "#440154FF") +
geom_col(aes(x = dataset, y = grsq), fill = "#20A486FF") +
coord_flip() +
theme(text = element_text(size=35, color = "#333333"),
panel.background = element_rect(fill = "transparent", color = "#333333"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
legend.text=element_text(color = "#333333"),
legend.title = element_text(color = "#333333"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg)
axis.text.x = element_text(color = "#333333"),
axis.text.y = element_text(color = "#333333")
)
ggsave(model_fit_plot,
filename = "/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/Conferences/Evolution-2019/poster/model_fit_plot.png",
bg= "transparent",
device = "png")
ggsave(model_fit_plot,
filename = "/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/Conferences/Evolution-2019/poster/model_fit_plot.png",
bg= "transparent",
device = "png")
model_fit_plot <- model_fit_df %>%
mutate(dataset = fct_reorder(dataset, rsq)) %>%
ggplot(aes(x = dataset, y = rsq)) +
labs(y = "Rsq (GRsq)", title = "Model fit for geographic subsets") +
geom_col(fill = "#440154FF") +
geom_col(aes(x = dataset, y = grsq), fill = "#20A486FF") +
coord_flip() +
theme(text = element_text(size=35, color = "#333333"),
panel.background = element_rect(fill = "transparent", color = "#333333"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
legend.text=element_text(color = "#333333"),
legend.title = element_text(color = "#333333"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg)
axis.text.x = element_text(color = "#333333"),
axis.text.y = element_text(color = "#333333")
)
model_fit_plot
ggsave(model_fit_plot,
filename = "/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/Conferences/Evolution-2019/poster/model_fit_plot.png",
bg= "transparent",
device = "png")
model_fit_plot <- model_fit_df %>%
mutate(dataset = fct_reorder(dataset, rsq)) %>%
ggplot(aes(x = dataset, y = rsq)) +
labs(x = "", y = "Rsq (GRsq)", title = "Model fit for geographic subsets") +
geom_col(fill = "#440154FF") +
geom_col(aes(x = dataset, y = grsq), fill = "#20A486FF") +
coord_flip() +
theme(text = element_text(size=35, color = "#333333"),
panel.background = element_rect(fill = "transparent", color = "#333333"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
legend.text=element_text(color = "#333333"),
legend.title = element_text(color = "#333333"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg)
axis.text.x = element_text(color = "#333333"),
axis.text.y = element_text(color = "#333333")
)
ggsave(model_fit_plot,
filename = "/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/Conferences/Evolution-2019/poster/model_fit_plot.png",
bg= "transparent",
device = "png")
viridis::viridis_pal(15)
viridis::viridis_pal(15)
viridis::viridis_pal(15)
viridis::viridis(15)
plot(env_rast)
devtools::install_github("graemetlloyd/Claddis")
devtools::install_github("graemetlloyd/metatree")
workshop.packages <- c("rwty", "knitr", "bookdown", "strap", "devtools", "ape", "phytools", "geiger", "OUwie")
install.packages(workshop.packages, dependencies = TRUE)
install.packages(workshop.packages, dependencies = TRUE)
install.packages(workshop.packages, dependencies = TRUE)
install.packages(workshop.packages, dependencies = TRUE)
install.packages("rwty")
install.packages("strap")
install.packages("bookdown")
install.packages("phytools")
install.packages("geiger")
install.packages("OUwie")
devtools::install_github("uyedaj/treeplyr")
devtools::install_github("uyedaj/treeplyr")
usethis::browse_github_pat()
library(raster)
library(adehabitatHS)
library(tidyverse)
library(readxl)
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") %>%
filter(genus == "argosarchus", species == "horridus") %>%
select(longitude, latitude)
source("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/R/min_convex_poly.R")
locs_poly <- locs
coordinates(locs_poly) <- ~longitude + latitude
background_poly <- min_conv_poly(locs_poly)
plot(background_poly)
background_env <- crop(env, background_poly)
env_list <- list.files("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/climate", full.names = TRUE)
env <- stack(env_list)
background_env <- crop(env, background_poly)
plot(background_env)
plot(background_env[[1]])
plot(background_poly, add = TRUE)
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") #%>%
locs
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") %>%
filter(genus == "acanthoxyla", species == "sp") %>%
select(longitude, latitude)
coordinates(locs) <- ~longitude + latitude
env_list <- list.files("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/climate", full.names = TRUE)
env <- stack(env_list)
background_poly <- min_conv_poly(locs)
plot(env[[1]])
plot(background_poly, add = TRUE)
plot(env[[1]])
points(locs, add = TRUE)
points(locs)
locs
locs
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") %>%
filter(genus == "clitarchus") %>%
select(longitude, latitude)
locs
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") %>%
filter(genus == "clitarchus") %>%
select(genus, species, longitude, latitude)
locs
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") %>%
filter(genus == "clitarchus", species == "tepaki") %>%
select(genus, species, longitude, latitude)
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") %>%
filter(genus == "clitarchus", species == "tepaki") %>%
select(longitude, latitude)
coordinates(locs) <- ~longitude + latitude
env_list <- list.files("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/climate", full.names = TRUE)
env <- stack(env_list)
background_poly <- min_conv_poly(locs)
plot(env[[1]])
points(locs)
background_poly <- min_conv_poly(locs)
background_env <- mask(env, background_poly)
plot(background_poly, add = TRUE)
plot(background_poly)
background_env <- crop(env, background_poly)
background_env <- crop(env, background_poly)
plot(background_env)
plot(background_env[[1]])
points(locs)
plot(background_poly, add = TRUE)
trial <- env[[1]] %>% st_as_sf()
trial <- env[[1]] %>% st::st_as_sf()
trial <- env[[1]] %>% sf::st_as_sf()
library(sf)
trial <- env[[1]]
trial <- st_as_sf(trial)
?st_as_sf
?read_sf
env_list <- list.files("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/climate", full.names = TRUE)
env <- st_read(env_list)
env <- st_read("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/climate")
?st_read
env <- st_read("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/climate/CHELSA_bio10_1.tif")
env_list <- list.files("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/climate", full.names = TRUE)
env <- stack(env_list)
library(ggspatial)
ggplot() +
ggspatial::layer_spatial(env[[1]])
plot(rnaturalearth::ne_countries(country = "new zealand"))
?ggspatial::geom_spatial_point
locs
?crs
crs(locs) <- "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"
locs
ggplot() +
ggspatial::layer_spatial(env[[1]]) +
ggspatial::geom_spatial_point(locs)
ggplot() +
ggspatial::layer_spatial(env[[1]]) +
ggspatial::geom_spatial_point(data = locs, aes(x = longitude, y = latitude))
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot() +
ggspatial::layer_spatial(env[[1]]) +
ggspatial::geom_spatial_point(data = locs, aes(x = longitude, y = latitude))
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(env[[1]]) +
ggspatial::geom_spatial_point()
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[1]]) +
ggspatial::geom_spatial_point()
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point()
?extent
nz_env <- "/Users/connorfrench/Dropbox/Old_Mac/climate-data/chelsa_30sec_NewZealand/chelsa_bioclims_NZ.tif"
env <- stack(nz_env)
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point()
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
ggspatial::geom_spatial_polygon(background_poly)
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
ggspatial::geom_spatial_polygon(data = background_poly)
background_poly
?geom_spatial_polygon
background_poly <- min_conv_poly(locs) %>%
st_as_sf()
background_poly
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
ggspatial::geom_spatial_polygon(data = background_poly)
?st_as_sf
background_poly <- min_conv_poly(locs) %>%
st_as_sf(crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
ggspatial::geom_spatial_polygon(data = background_poly)
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
#ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
ggspatial::geom_spatial_polygon(data = background_poly)
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
ggspatial::geom_spatial_polygon(data = background_poly)
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) #+
ggspatial::geom_spatial_point() +
geom_sf(data = background_poly)
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
geom_sf(data = background_poly)
background_poly
background_poly <- min_conv_poly(locs) %>%
st_as_sf(proj4string = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
background_poly
?st_as_sf
background_poly <- min_conv_poly(locs) %>%
st_as_sf(crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
background_poly
background_poly <- min_conv_poly(locs) %>%
st_as_sf(epsg = 4326)
background_poly
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
geom_sf(data = background_poly)
background_poly <- min_conv_poly(locs) %>%
st_as_sf(epsg = 4326)
?sf::st_as_sfc()
background_poly <- min_conv_poly(locs) %>%
st_as_sfc(crs = 4326)
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
geom_sf(data = background_poly)
st_crs(background_poly)
background_poly <- min_conv_poly(locs) %>%
st_as_sfc()
st_crs(background_poly) <- 4326
st_crs(background_poly) <- 4326
st_crs(background_poly)
locs %>%
as.data.frame(xy = TRUE) %>%
ggplot(aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
geom_sf(data = background_poly)
locs_df <- locs %>%
as.data.frame(xy = TRUE)
ggplot(data = locs_df, aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
geom_sf(data = background_poly)
locs_df
ggplot(data = locs_df, aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) #+
ggplot(data = locs_df, aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() #+
background_poly
ggplot(data = locs_df, aes(x = longitude, y = latitude)) +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point() +
geom_sf(data = background_poly, fill = NA)
ggplot() +
geom_sf(data = background_poly)
ggplot() +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point(data = locs_df, aes(x = longitude, y = latitude)) +
geom_sf(data = background_poly, fill = NA)
library(raster)
library(sf)
library(adehabitatHS)
library(tidyverse)
library(readxl)
library(ggspatial)
source("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/R/min_convex_poly.R")
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") %>%
filter(genus == "clitarchus", species == "tepaki") %>%
select(longitude, latitude)
View(min_conv_poly)
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") #%>%
coordinates(locs) <- ~longitude + latitude
crs(locs) <- "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"
nz_env <- "/Users/connorfrench/Dropbox/Old_Mac/climate-data/chelsa_30sec_NewZealand/chelsa_bioclims_NZ.tif"
env <- stack(nz_env)
?extract
ext_env <- raster::extract(env, locs)
ext_env
head(ext_env)
ext_env <- tibble(locs, ext_env)
ext_env <- as_tibble(locs, ext_env)
ext_env
names(ext_env)
ext_env <- raster::extract(env, locs)
ext_env_combo <- as_tibble(locs, ext_env)
ext_env
ext_env_combo
ext_env_combo <- bind_cols(locs, ext_env)
?bind_cols
ext_env <- raster::extract(env, locs) %>%
as_tibble()
ext_env
ext_env <- raster::extract(env, locs) %>%
as_tibble() %>%
janitor::clean_names() %>%
bind_cols(locs)
locs
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") #%>%
ext_env <- raster::extract(env, locs) %>%
as_tibble() %>%
bind_cols(as.data.frame(locs, xy = TRUE)) %>%
janitor::clean_names()
ext_env <- raster::extract(env, locs) %>%
as_tibble() %>%
bind_cols(as.data.frame(locs, xy = TRUE)) %>%
janitor::clean_names()
coordinates(locs) <- ~longitude + latitude
ext_env <- raster::extract(env, locs) %>%
as_tibble() %>%
bind_cols(as.data.frame(locs, xy = TRUE)) %>%
janitor::clean_names()
ext_env
ext_env %>%
filter(is.na(chelsa_bioclims_nz_1))
ext_na <- ext_env %>%
filter(is.na(chelsa_bioclims_nz_1))
ext_na
ext_na$species
ext_na$latitude
ext_na$longitude
coordinates(ext_na) <- ~longitude + latitude
ggplot() +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point(data = ext_na, aes(x = longitude, y = latitude)) +
geom_sf(data = background_poly, fill = NA)
background_poly <- min_conv_poly(locs) %>%
st_as_sfc()
st_crs(background_poly) <- 4326
locs_df <- locs %>%
as.data.frame(xy = TRUE)
background_env <- crop(env, background_poly)
background_env <- crop(env, background_poly)
locs <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/Science/Stick-Insect-Project/Original-spreadsheets/all species New_6-14-19.xlsx") #%>%
coordinates(locs) <- ~longitude + latitude
crs(locs) <- "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"
background_poly <- min_conv_poly(locs) %>%
st_as_sfc()
st_crs(background_poly) <- 4326
locs_df <- locs %>%
as.data.frame(xy = TRUE)
background_env <- crop(env, background_poly)
background_poly
extent(background_poly)
background_env <- crop(env, background_poly)
?st_crop
background_poly_sp <- as(background_poly, "Spatial")
background_env <- crop(env, background_poly)
background_env <- crop(env, background_poly_sp)
ggplot() +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point(data = ext_na, aes(x = longitude, y = latitude)) +
geom_sf(data = background_poly, fill = NA)
ext_na <- ext_env %>%
filter(is.na(chelsa_bioclims_nz_1))
ggplot() +
ggspatial::layer_spatial(background_env[[2]]) +
ggspatial::geom_spatial_point(data = ext_na, aes(x = longitude, y = latitude)) +
geom_sf(data = background_poly, fill = NA)
ext_na
ext_na$locality
ext_na$reproductive_mode
ext_na %>%
select(!contains("bioclims"))
?contains
ext_na %>%
select(-contains("bioclims"))
ext_na %>%
select(-contains("bioclims")) %>%
write_csv(path = "~/Desktop/no_environment_individuals.csv")
View(env)
