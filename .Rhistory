geom_sf(data = brazil_map) +
geom_point(data = sea, aes(x = longitude, y = latitude))
ggplot() +
geom_sf(data = brazil_map) +
geom_point(data = q_final, aes(x = longitude, y = latitude))
mariana_df <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/enyalius-project/mariana_stuff/Enyalius_Seq_FINAL.xlsx") %>%
janitor::clean_names() %>%
select(sample_id, genus, species, longitude, latitude, locality, id_code, source_lat_long, obs, reads)
laura_df <- read_csv("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/enyalius-project/mariana_stuff/FINAL_Enyalius_ALL_latlon_laura.csv") %>%
janitor::clean_names() %>%
rename(id_code = sample, l_long = long, l_lat = lat)
combo_df <- left_join(mariana_df, laura_df, by = "id_code")
library(tidyverse)
library(sf)
library(raster)
library(leaflet)
celio_df <- read_csv("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/Frog-life-history-project/data/genetics/phyllomedusa_celio_filtered.csv")
celio_localities <- celio_df %>%
filter(!is.na(latitude)) %>%
janitor::clean_names() %>%
rename(genus = genero,
species = especie,
id = cfbh_t_nÂº_frasco,
locality = local_de_coleta) %>%
mutate(species = as.factor(species))
data <- celio_localities
factor <- "species"
#make color palette
pal <- colorFactor(palette = "Dark2", domain = NULL)
#create popup labels for points
popup.label <- paste(data$genus, data$species, "<br>",
data$id, "<br>",
data$locality)
#set the map bounds
max.lat <- max(data$latitude) %>% ceiling()
min.lat <- min(data$latitude) %>% floor()
max.lon <- max(data$longitude) %>% ceiling()
min.lon <- min(data$longitude) %>% floor()
#plot in leaflet
leaflet() %>%
addTiles() %>%
fitBounds(lng1 = min.lon, lng2 = max.lon, lat1 = min.lat, lat2 = max.lat) %>%
addCircleMarkers(data = data,
color = pal(data[[factor]]),
radius = 3,
popup = popup.label) %>%
addLegend(data = data, "bottomright", pal = pal, values = data[[factor]], opacity = .9, title = factor)
brazil_map <- rnaturalearth::ne_countries(country = "brazil", returnclass = "sf") %>%
sf::st_crop(xmin = -65, xmax = -45, ymin = -35, ymax = -20)
data
data %>% count(species)
library(tidyverse)
library(readxl)
mariana_df <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/enyalius-project/mariana_stuff/Enyalius_Seq_FINAL.xlsx") %>%
janitor::clean_names() %>%
select(sample_id, genus, species, longitude, latitude, locality, id_code, source_lat_long, obs, reads)
laura_df <- read_csv("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/enyalius-project/mariana_stuff/FINAL_Enyalius_ALL_latlon_laura.csv") %>%
janitor::clean_names() %>%
rename(id_code = sample, l_long = long, l_lat = lat)
combo_df <- left_join(mariana_df, laura_df, by = "id_code")
combo_df %>%
select(species, id_code, longitude, l_long, latitude, l_lat, obs, source_lat_long, locality) %>%
filter(is.na(l_long)) %>%
View()
q_inds <- c("bib_confus_PNSC8097A",
"bil_capar_MTR12600",
"cat_itc_MTR11831",
"cat_itc_MTR11833",
"cat_jib_LG1377",
"cat_uba_PEU545",
"cat2_mur_MTR18412",
"per_petrop_MTR22755",
"pic_tra_MTR13499",
"per_sale_MTR33267",
"ihe_saop_CTMZ13066",
"per_saop_UNIBAN0883",
"per_saop_UNIBAN0838",
"ihe_nhae_CTMZ13228",
"ihe_nhae_CTMZ13229",
"ihe_smig_CTMZ03618",
"bib_esec_RC042",
"bib_esec_RC090",
"bib_esec_RC106",
"cat_jibo_MTR18418",
"bil_piat_MTR20123")
q_df <- combo_df %>% filter(id_code %in% q_inds) %>% mutate(latitude = as.numeric(latitude))
brazil_map <- rnaturalearth::ne_countries(country = "brazil", returnclass = "sf")
ggplot() +
geom_sf(data = brazil_map) +
geom_point(data = q_df, aes(x = longitude, y = latitude))
g_earth <- q_df %>% filter(str_detect(source_lat_long, "Google Earth"))
ggplot() +
geom_sf(data = brazil_map) +
geom_point(data = g_earth, aes(x = longitude, y = latitude))
q_final <- combo_df %>% filter(id_code %in% q_inds,
!str_detect(source_lat_long, "Google Earth"))
?%in%
?`%in%``
sldf
)
`
?`%in%`
df_filter <- combo_df %>% filter(!id_code %in% q_inds,
!str_detect(source_lat_long, "Google Earth"))
df_filter
df_filter %>% count(species)
df_filter %>% count(species, sort = TRUE)
df_high %>% group_by(species) %>% filter(n() > 10)
df_filter %>% group_by(species) %>% filter(n() > 10)
df_filter %>% group_by(species) %>% filter(n() > 10) %>% count()
df_high <- df_filter %>% group_by(species) %>% filter(n() > 10)
data <- df_high
#create popup labels for points
popup.label <- paste(data$genus, data$species, "<br>",
data$id, "<br>",
data$locality)
#set the map bounds
max.lat <- max(data$latitude) %>% ceiling()
min.lat <- min(data$latitude) %>% floor()
data
#create popup labels for points
popup.label <- paste(data$genus, data$species, "<br>",
data$id_code, "<br>",
data$locality)
#set the map bounds
max.lat <- max(data$latitude) %>% ceiling()
data <- df_high %>% mutate(latitude = as.numeric(latitude))
df_high
data <- df_high %>% mutate(latitude = numeric(latitude))
data <- df_high %>% mutate(latitude = numeric(latitude))
data <- df_high %>% mutate(latitude = as.numeric(latitude))
data
data$latitude
df_high$latitude
mariana_df <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/enyalius-project/mariana_stuff/Enyalius_Seq_FINAL.xlsx") %>%
janitor::clean_names() %>%
select(sample_id, genus, species, longitude, latitude, locality, id_code, source_lat_long, obs, reads) %>%
mutate(latitude = str_replace(latitude, " ", ""))
mariana_df
mariana_df$latitude
mariana_df <- read_xlsx("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/enyalius-project/mariana_stuff/Enyalius_Seq_FINAL.xlsx") %>%
janitor::clean_names() %>%
select(sample_id, genus, species, longitude, latitude, locality, id_code, source_lat_long, obs, reads)
laura_df <- read_csv("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/enyalius-project/mariana_stuff/FINAL_Enyalius_ALL_latlon_laura.csv") %>%
janitor::clean_names() %>%
rename(id_code = sample, l_long = long, l_lat = lat)
combo_df <- left_join(mariana_df, laura_df, by = "id_code") %>%
)
combo_df <- left_join(mariana_df, laura_df, by = "id_code") %>%
mutate(latitude = str_replace(latitude, " ", ""))
df_filter <- combo_df %>% filter(!id_code %in% q_inds,
!str_detect(source_lat_long, "Google Earth"))
df_filter %>% count(species, sort = TRUE)
df_high <- df_filter %>% group_by(species) %>% filter(n() > 10)
data <- df_high %>% mutate(latitude = as.numeric(latitude))
mariana_df$latitude
combo_df <- left_join(mariana_df, laura_df, by = "id_code")
df_filter <- combo_df %>% filter(!id_code %in% q_inds,
!str_detect(source_lat_long, "Google Earth"))
df_filter %>% count(species, sort = TRUE)
df_high <- df_filter %>% group_by(species) %>% filter(n() > 10)
data <- df_high %>%
mutate(latitude = str_replace(latitude, " ", "")))
data <- df_high %>%
mutate(latitude = str_replace(latitude, " ", ""))
data
data$latiq
data$latitude
data <- df_high %>%
mutate(latitude = str_replace(latitude, "\s", ""))
data <- df_high %>%
mutate(latitude = str_replace_all(latitude, " ", ""))
data$latitude
data <- df_high %>%
mutate(latitude = str_replace_all(latitude, "\t", ""))
data$latitude
data %>% filter(str_detect(latitude, " "))
data %>% filter(str_detect(latitude, "\t"))
data %>% filter(str_detect(latitude, " "))
data %>% filter(!str_detect(latitude, " "))
data %>% filter(str_detect(latitude, " "))
?str_detect
df_high$latitude[53]
df_high$latitude[53] <- "-14.40656"
data <- df_high
data <- df_high %>% mutate(latitude = as.numeric(latitude))
#create popup labels for points
popup.label <- paste(data$genus, data$species, "<br>",
data$id_code, "<br>",
data$locality)
#set the map bounds
max.lat <- max(data$latitude) %>% ceiling()
min.lat <- min(data$latitude) %>% floor()
max.lon <- max(data$longitude) %>% ceiling()
min.lon <- min(data$longitude) %>% floor()
#plot in leaflet
leaflet() %>%
addTiles() %>%
fitBounds(lng1 = min.lon, lng2 = max.lon, lat1 = min.lat, lat2 = max.lat) %>%
addCircleMarkers(data = data,
color = pal(data[[factor]]),
radius = 3,
popup = popup.label) %>%
addLegend(data = data, "bottomright", pal = pal, values = data[[factor]], opacity = .9, title = factor)
library(leaflet)
leaflet() %>%
addTiles() %>%
fitBounds(lng1 = min.lon, lng2 = max.lon, lat1 = min.lat, lat2 = max.lat) %>%
addCircleMarkers(data = data,
color = pal(data[[factor]]),
radius = 3,
popup = popup.label) %>%
addLegend(data = data, "bottomright", pal = pal, values = data[[factor]], opacity = .9, title = factor)
#create popup labels for points
popup.label <- paste(data$genus, data$species, "<br>",
data$id_code, "<br>",
data$locality)
#set the map bounds
max.lat <- max(data$latitude) %>% ceiling()
min.lat <- min(data$latitude) %>% floor()
max.lon <- max(data$longitude) %>% ceiling()
min.lon <- min(data$longitude) %>% floor()
#plot in leaflet
leaflet() %>%
addTiles() %>%
fitBounds(lng1 = min.lon, lng2 = max.lon, lat1 = min.lat, lat2 = max.lat) %>%
addCircleMarkers(data = data,
color = pal(data[[factor]]),
radius = 3,
popup = popup.label) %>%
addLegend(data = data, "bottomright", pal = pal, values = data[[factor]], opacity = .9, title = factor)
#make color palette
pal <- colorFactor(palette = "Dark2", domain = NULL)
factor <- "species"
#plot in leaflet
leaflet() %>%
addTiles() %>%
fitBounds(lng1 = min.lon, lng2 = max.lon, lat1 = min.lat, lat2 = max.lat) %>%
addCircleMarkers(data = data,
color = pal(data[[factor]]),
radius = 3,
popup = popup.label) %>%
addLegend(data = data, "bottomright", pal = pal, values = data[[factor]], opacity = .9, title = factor)
#plot in leaflet
leaflet() %>%
addTiles() %>%
fitBounds(lng1 = min.lon, lng2 = max.lon, lat1 = min.lat, lat2 = max.lat) %>%
addCircleMarkers(data = data,
color = pal(data[[factor]]),
radius = 3,
popup = popup.label) %>%
addLegend(data = data, "bottomright", pal = pal, values = data[[factor]], opacity = .9, title = factor)
df_high %>% count(species)
df_high %>% count(species) %>% filter(str_detect("$us"))
df_high %>% count(species) %>% filter(str_detect(pattern = "$us"))
df_high %>% count(species) %>% filter(str_detect(species, pattern = "$us"))
df_high %>% count(species) %>% filter(str_detect(species, pattern = "us$"))
df_high %>% count(species) %>% filter(str_detect(species, pattern = "i$"))
source('~/Dropbox/Old_Mac/School_Stuff/CUNY/enyalius-project/enyalius_exploration.R', echo=TRUE)
###### Plot sequence
library(data.table)
library(tidyverse)
library(tidylog)
#library(furrr)
library(leaflet)
library(sf)
library(raster)
library(ape)
library(gdata)
library(entropy)
library(moments)
#function to pad the ends of shorter sequences with "N"s so all sequences are the same length for alignments
source("R/pad_short_seqs_function.R") #pad short sequences with Ns
source("R/fasta_write_function.R") #write fasta files
source("R/calc_gen_dist.R") #align seqs and calculate mean pi per species per cell
source("R/hill_num_calc.R") #calculate hill number of pi. Note* using clustal omega in the ape R package requires having a copy of clustal omega downloaded and accessible either through their PATH or have it indicated in the clustalomega() argument.
source("R/pi_summary_function.R")
source("R/sumstat_plot_function.R")
###Specify the results folder
#folder for the entire project's output to go into
todays_results <- paste0("results_", Sys.Date())
todays_results
dir.create(todays_results)
dir.create(paste0(todays_results, "/output"))
dir.create(paste0(todays_results, "/plots"))
dir.create(paste0(todays_results, "/rasters"))
#output folder
output <- paste0(todays_results, "/output")
dir.create(output)
#plots folder
plots <- paste0(todays_results, "/plots")
#rasters
rasters <- paste0(todays_results, "/rasters")
###Begin summary stats
#read in sequence statistics dataframe. replace path if you're conducting this analysis on a different day than the first two steps
pi_df_file <- paste0("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/BigAss-bird-phylogeography/BigAss-phylogeography//Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/BigAss-bird-phylogeography/BigAss-phylogeography/pi_df_one_100.csv")
pi_df_one <- fread(pi_df_file) %>%
mutate(cells = cell)
pi_df_file
###Begin summary stats
#read in sequence statistics dataframe. replace path if you're conducting this analysis on a different day than the first two steps
pi_df_file <- "/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/CUNY/BigAss-bird-phylogeography/BigAss-phylogeography/pi_df_one_100.csv"
pi_df_one <- fread(pi_df_file) %>%
mutate(cells = cell)
pi_df_one
pi_df_one <- fread(pi_df_file) %>%
as_tibble() %>%
mutate(cells = cell)
pi_df_one
pi_df_one %>%
#filter(avg_pi > 0.01) %>%
group_by(cells) %>%
count(sort = TRUE)
#plot density plots of avg pi and sd pi
avg_pi_density <- pi_df_one %>%
ggplot(aes(x = avg_pi)) +
geom_density(fill = "darkgreen", alpha = 0.7) +
geom_histogram(fill = "darkgreen", color = "black", alpha = 0.7, bins = 50) +
labs(x = "Average pi", y = "Frequency", title = "Average pi per species per cell") +
theme_minimal()
avg_pi_density
sd_pi_density <- pi_df_one %>%
ggplot(aes(x = sd_pi)) +
geom_density(fill = "darkgreen", alpha = 0.7) +
geom_histogram(fill = "darkgreen", color = "black") +
labs(x = "SD pi", y = "Frequency", title = "SD pi per species per cell") +
theme_minimal()
sd_pi_density
sa_clim_1d <- sa_clim_1d %>%
filter(avg_pi <= 0.05, num_seqs >= 5, perc_missing < 0.25) %>%
group_by(cell) %>%
filter(n() >= 10)
pi_df_one <-
pi_df_one %>%
filter(avg_pi <= 0.05, num_seqs >= 5, perc_missing < 0.25) %>%
group_by(cell) %>%
filter(n() >= 10)
pi_df_one
#plot density plots of avg pi and sd pi
avg_pi_density <- pi_df_one %>%
ggplot(aes(x = avg_pi)) +
geom_density(fill = "darkgreen", alpha = 0.7) +
geom_histogram(fill = "darkgreen", color = "black", alpha = 0.7, bins = 50) +
labs(x = "Average pi", y = "Frequency", title = "Average pi per species per cell") +
theme_minimal()
avg_pi_density
sd_pi_density <- pi_df_one %>%
ggplot(aes(x = sd_pi)) +
geom_density(fill = "darkgreen", alpha = 0.7) +
geom_histogram(fill = "darkgreen", color = "black") +
labs(x = "SD pi", y = "Frequency", title = "SD pi per species per cell") +
theme_minimal()
sd_pi_density
#plot density plots of avg pi and sd pi
avg_pi_density <-
pi_df_one %>%
ggplot(aes(x = avg_pi, y = ..density..)) +
geom_density(fill = "darkgreen", alpha = 0.7) +
geom_histogram(fill = "darkgreen", color = "black", alpha = 0.7, bins = 50) +
labs(x = "Average pi", y = "Frequency", title = "Average pi per species per cell") +
theme_minimal()
avg_pi_density
#plot density plots of avg pi and sd pi
avg_pi_density <-
pi_df_one %>%
ggplot(aes(x = avg_pi, y = ..density..)) +
geom_density(fill = "gray", alpha = 0.7) +
geom_histogram(fill = "darkgreen", color = "black", bins = 50) +
labs(x = "Average pi", y = "Frequency", title = "Average pi per species per cell") +
theme_minimal()
avg_pi_density
#plot density plots of avg pi and sd pi
avg_pi_density <-
pi_df_one %>%
ggplot(aes(x = avg_pi, y = ..density..)) +
geom_histogram(fill = "darkgreen", color = "black", bins = 50) +
geom_density(fill = "gray", alpha = 0.7) +
labs(x = "Average pi", y = "Frequency", title = "Average pi per species per cell") +
theme_minimal()
avg_pi_density
#plot density plots of avg pi and sd pi
avg_pi_density <-
pi_df_one %>%
ggplot(aes(x = avg_pi, y = ..density..)) +
geom_histogram(fill = "darkgreen", color = "black", bins = 50) +
geom_density(fill = "gray", alpha = 0.5) +
labs(x = "Average pi", y = "Frequency", title = "Average pi per species per cell") +
theme_minimal()
avg_pi_density
#plot density plots of avg pi and sd pi
avg_pi_density <-
pi_df_one %>%
ggplot(aes(x = avg_pi, y = ..density..)) +
geom_histogram(fill = "darkgreen", color = "black", bins = 50) +
geom_density(fill = "gray", alpha = 0.2) +
labs(x = "Average pi", y = "Frequency", title = "Average pi per species per cell") +
theme_minimal()
avg_pi_density
sd_pi_density <-
pi_df_one %>%
ggplot(aes(x = sd_pi)) +
geom_histogram(fill = "darkgreen", color = "black", bins = 50) +
geom_density(fill = "gray", alpha = 0.2) +
labs(x = "SD pi", y = "Frequency", title = "SD pi per species per cell") +
theme_minimal()
#plot density plots of avg pi and sd pi
avg_pi_density <-
pi_df_one %>%
ggplot(aes(x = avg_pi, y = ..density..)) +
geom_histogram(fill = "darkgreen", color = "black", bins = 50) +
geom_density(fill = "gray", alpha = 0.2) +
labs(x = "Average pi", y = "Density", title = "Average pi per species per cell") +
theme_minimal()
avg_pi_density
sd_pi_density <-
pi_df_one %>%
ggplot(aes(x = sd_pi, y = ..density..)) +
geom_histogram(fill = "darkgreen", color = "black", bins = 50) +
geom_density(fill = "gray", alpha = 0.2) +
labs(x = "SD pi", y = "Density", title = "SD pi per species per cell") +
theme_minimal()
sd_pi_density
#make plot list
d_plot_grob <- list(avg_pi_density, sd_pi_density) %>% lapply(ggplotGrob)
#save plots to output
ggsave(paste0(plots, "/pi_density_plots.pdf"), gridExtra::marrangeGrob(grobs = d_plot_grob, nrow = 2, ncol = 1))
?replicate
?map
?purrr::rerun
pi_summary_fun
#replicate the sampling 1000 times.
sum_list <- purrr::rerun(1000, pi_summary_fun(pi_df_one, n_species = 10))
sum_list[[1]]
#summarise these samples into a final df
sum_df <- bind_rows(sum_list) %>%
group_by(cells) %>%
dplyr::summarise(median.pi.avg = mean(median.pi),
median.pi.sd = sd(median.pi),
median.pi.skew = skewness(median.pi),
mean.pi.avg = mean(mean.pi),
mean.pi.sd = sd(mean.pi),
mean.pi.skew = skewness(mean.pi),
sd.pi.avg = mean(sd.pi),
sd.pi.sd = sd(sd.pi),
hill.zero.avg = mean(hill.zero),
hill.zero.sd = sd(hill.zero),
hill.one.avg = mean(hill.one),
hill.one.sd = sd(hill.one),
hill.two.avg = mean(hill.two),
hill.two.sd = sd(hill.two),
shannon.avg = mean(shannon),
shannon.sd = sd(shannon))
sum_df
hist(sum_df$mean.pi.avg)
hist(sum_df$mean.pi.avg, bins = 50)
?hist
hist(sum_df$mean.pi.avg, breaks = 50)
hist(sum_df$hill.zero.avg, breaks = 50)
hist(sum_df$hill.one.avg, breaks = 50)
hist(sum_df$hill.two.avg, breaks = 50)
hist(sum_df$hill.one.sd, breaks = 50)
hist(sum_df$hill.two.sd, breaks = 50)
sum_df$mean.pi.skew
hist(sum_df$mean.pi.skew)
hist(sum_df$median.pi.avg)
hist(sum_df$median.pi.avg, breaks = 5-)
hist(sum_df$median.pi.avg, breaks = 50)
source("R/equal_area_resampling.R")
### read in environmental data for plotting
#find where your environmental file path is
env_file_path <- "../all_climate"
env_files <- list.files(env_file_path)
envs <- raster::stack(env_files)
env_files
env_files <- list.files(env_file_path, full.names = TRUE)
envs <- raster::stack(env_files)
### read in environmental data for plotting
#We have three different data sets: 19 CHELSA bioclims (chelsa), 3 DHI variables (dhi), and global habitat heterogeneity (ghh) from Tuanmu and Jetz 2015
chelsa_dir <- "../chelsa_10min/10min"
chelsa_dir <- "../chelsa_10min/10min"
dhi_file <- "../ndvi_dhi_combined-v6/ndvi_dhi_combo_small.tif" #only one file, so don't need to list contents
ghh_dir <- "../global_habitat_heterogeneity"
chelsa_files <- list.files(env_file_path, pattern = ".tif$", full.names = TRUE)
chelsa_files
chelsa_files <- list.files(chelsa_dir, pattern = ".tif$", full.names = TRUE)
chelsa_files
ghh_files <- list.files(ghh_dir, pattern = ".tif$", full.names = TRUE)
chelsa <- stack(chelsa_dir)
chelsa <- stack(chelsa_files)
dhi <- stack(dhi_file)
ghh <- stack(ghh_files)
chelsa
chelsadhi
dhi
ghh
### aggregate to equal area projection at chosen resolution
chelsa_agg <- resample_equal_area(chelsa, km = 100)
dhi_agg <- resample_equal_area(dhi, km = 100)
ghh_agg <- resample(ghh, km = 100)
source("R/equal_area_resampling.R")
### aggregate to equal area projection at chosen resolution
chelsa_agg <- resample_equal_area(chelsa, km = 100)
dhi_agg <- resample_equal_area(dhi, km = 100)
ghh_agg <- resample(ghh, km = 100)
q
chelsa_agg
?writeRaster
debugSource('~/Dropbox/Old_Mac/School_Stuff/CUNY/BigAss-bird-phylogeography/BigAss-phylogeography/BigAss-3-summary-stats-temp.R')
q()
source('~/Dropbox/Old_Mac/School_Stuff/CUNY/BigAss-bird-phylogeography/BigAss-phylogeography/BigAss-3-summary-stats-remote.R', echo=TRUE)
?resample
?projectRaster
